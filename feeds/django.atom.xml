<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>rschalch's</title><link href="https://rschalch.github.io/" rel="alternate"></link><link href="https://rschalch.github.io/feeds/django.atom.xml" rel="self"></link><id>https://rschalch.github.io/</id><updated>2016-11-11T00:00:00-02:00</updated><entry><title>Django - Aula 01 - Introdução</title><link href="https://rschalch.github.io/django-framework-aula-01-introducao.html" rel="alternate"></link><published>2016-11-11T00:00:00-02:00</published><updated>2016-11-11T00:00:00-02:00</updated><author><name>Ricardo Bürger Schalch</name></author><id>tag:rschalch.github.io,2016-11-11:django-framework-aula-01-introducao.html</id><summary type="html">&lt;h2&gt;Introdução à&amp;nbsp;framework&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Django é a principal e mais conhecida framework Python para web nos dias atuais. Sua filosofia é baseada em &lt;abbr title="Rapid Application Development"&gt;&lt;span class="caps"&gt;RAD&lt;/span&gt;&lt;/abbr&gt;, um conceito muito importante no mundo do desenvolvimento de&amp;nbsp;software.&lt;/p&gt;
&lt;p&gt;Suas características&amp;nbsp;são:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Baixo acoplamento&lt;/strong&gt;: As várias camadas da framework não devem conhecer sobre o funcionamento de outras, a menos que absolutamente necessário. Esse tipo de modelo permite alto grau de modularização e expansão já que cada parte é independente. Assim, futuras mudanças na aplicação serão mais seguras, já que o risco de uma parte interferir com a outra é&amp;nbsp;mínimo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Menos código&lt;/strong&gt;: Django utiliza todo o poder dinâmico da linguagem Python, assim alcançamos grandes resultados escrevendo pouquíssimo&amp;nbsp;código.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Rápido desenvolvimento&lt;/strong&gt;: A framework permite que ultrapassemos muitas tarefas tediosas no ciclo da construção de uma aplicação, um exemplo disso é a geração automática de um sistema de administração baseado nos modelos de dados que criamos. Apenas com essa caractérística podemos construir um sistema &lt;abbr title="Create, Read, Update and Delete"&gt;&lt;span class="caps"&gt;CRUD&lt;/span&gt;&lt;/abbr&gt; em poucos&amp;nbsp;minutos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Não repetição&lt;/strong&gt;: Cada conceito ou parte de código deverá existir em um único lugar apenas, eliminando redundâncias. A idéia é reduzir ao máximo o trabalho de alterações dentro do software e fazê-lo mais conciso e&amp;nbsp;inteligente.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="django"></category><category term="python"></category><category term="web"></category></entry></feed>