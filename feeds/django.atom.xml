<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>rschalch's</title><link href="https://rschalch.github.io/" rel="alternate"></link><link href="https://rschalch.github.io/feeds/django.atom.xml" rel="self"></link><id>https://rschalch.github.io/</id><updated>2016-11-12T00:00:00-02:00</updated><entry><title>Django - Aula 02 - Criando o projeto</title><link href="https://rschalch.github.io/django-framework-aula-02-criando-projeto.html" rel="alternate"></link><published>2016-11-12T00:00:00-02:00</published><updated>2016-11-12T00:00:00-02:00</updated><author><name>Ricardo Bürger Schalch</name></author><id>tag:rschalch.github.io,2016-11-12:django-framework-aula-02-criando-projeto.html</id><summary type="html">&lt;h2&gt;Pré-requisitos&lt;/h2&gt;
&lt;p&gt;Agora que conhecemos um pouquinho sobre a framework é hora de botar a mão na massa! Antes porém, é necessário preencher alguns requisitos do&amp;nbsp;sistema:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Controle de versão&lt;/strong&gt;: Vamos usar o &lt;span class="caps"&gt;GIT&lt;/span&gt; para essa finalidade, então certifique-se de que ele esteja instalado na sua máquina. Não conhece ou não sabe o que é &lt;span class="caps"&gt;GIT&lt;/span&gt; ainda? Urgente, atualize-se porque saber trabalhar com &lt;span class="caps"&gt;GIT&lt;/span&gt; é uma exigência na nossa área! Um bom tutorial pode ser achado &lt;a href="https://git-scm.com/book/pt-br/v1/Primeiros-passos-No%C3%A7%C3%B5es-B%C3%A1sicas-de-Git"&gt;neste endereço&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Virtualenv&lt;/strong&gt;: Se você não sabe o que ambientes virtuais são, sua importância, ou como instalar, escrevi sobre esse assunto em um outro &lt;a href="https://rschalch.github.io/ambientes-virtuais-virtualenv.html" title="Ambientes Virtuais"&gt;artigo&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Virtualenvwrapper&lt;/strong&gt;: Uma série de extensões para tornar mais fácil o trabalho com o virtualenv. A instalação e utilização dessa ferramenta pode ser encontrada &lt;a href="#"&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Criação e ativação do&amp;nbsp;ambiente&lt;/h2&gt;
&lt;p&gt;O primeiro passo é nos certificarmos de termos todo o ambiente virtual preparado para a instalação dos pacotes do projeto. Em apenas um comando criaremos um ambiente chamado &amp;#8220;django_project&amp;#8221; em Python 3 e instalaremos a última versão do&amp;nbsp;Django.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkvirtualenv --python&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/python3 -i django django_project
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ativamos o nosso&amp;nbsp;ambiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ workon django_project
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Devemos ter agora tudo pronto para começar. O prompt do terminal por padrão mostra qual o ambiente que está sendo utilizado da seguinte maneira (no nosso&amp;nbsp;caso):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;django_project&lt;span class="o"&gt;)&lt;/span&gt; $ 
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Iniciando um projeto&amp;nbsp;Django&lt;/h2&gt;
&lt;p&gt;Sendo uma framework moderna e baseada em padrões &lt;abbr title="Rapid Application Development"&gt;&lt;span class="caps"&gt;RAD&lt;/span&gt;&lt;/abbr&gt;, Django possui uma &lt;abbr title="Command Line Interface"&gt;&lt;span class="caps"&gt;CLI&lt;/span&gt;&lt;/abbr&gt; que facilita muitos processos comuns na criação e andamento de um projeto. Primeiramente vá até o seu diretório padrão de projetos (aqui usaremos como exemplo &amp;#8220;/home/user/projetos&amp;#8221;). Isso porque o Django irá criar dentro desse diretório uma pasta onde todo o seu projeto será contido. Digite os seguintes&amp;nbsp;comandos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;django_project&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/projetos  
&lt;span class="o"&gt;(&lt;/span&gt;django_project&lt;span class="o"&gt;)&lt;/span&gt; /home/user/projetos $ django-admin startproject myproject  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O &lt;code&gt;django-admin&lt;/code&gt; é um comando usado para funções administrativas como criar projetos e apps internos. Usando-o acima, criamos dentro da pasta &amp;#8220;/home/user/projetos&amp;#8221; um diretório com a seguinte&amp;nbsp;estrutura:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;myproject/
    myproject/
        __init__.py
        settings.py
        urls.py
        wsgi.py
    manage.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos explicar essa estrutura: A pasta &amp;#8220;myproject&amp;#8221; externa é uma pasta usada apenas pra conter o projeto. O Django realmente nao se importa como ela é chamada, ele a criou com esse nome porque foi o nome de projeto que especificamos. Agora, todos os arquivos que estão dentro dela são de suma importância para a aplicação. Dentro de &amp;#8220;myproject&amp;#8221; foi criada uma outra pasta com o mesmo nome. Essa pasta interna é o principal módulo do projeto, contendo importantes arquivos de configuração&amp;nbsp;como:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;settings.py&lt;/strong&gt;: um dos arquivos mais usados, pois contém configurações globais da&amp;nbsp;aplicação.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;urls.py&lt;/strong&gt;: arquivo usado para configurar as rotas (urls) do projeto e especificar suas respectivas&amp;nbsp;views.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wsgi.py&lt;/strong&gt;: usado para&amp;nbsp;deploy.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;E além desses temos o &lt;strong&gt;manage.py&lt;/strong&gt;, localizado ao lado do módulo do projeto, que faz basicamente as mesmas coisas que o django-admin, mas além disso ele coloca o módulo do nosso projeto dentro de &lt;code&gt;sys.path&lt;/code&gt; e seta uma importante variável de ambiente, &amp;#8220;DJANGO_SETTINGS_MODULE&amp;#8221;, para que ela aponte para o arquivo settings.py descrito&amp;nbsp;acima.&lt;/p&gt;
&lt;h2&gt;Sincronizando o banco de&amp;nbsp;dados&lt;/h2&gt;
&lt;p&gt;Por padrão, Django nos oferece a opção de criação de um banco SQLite. Vamos usar esse banco em nosso projeto, mas para isso é necessário que sincronizemos esse banco com a&amp;nbsp;aplicação:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;django_project&lt;span class="o"&gt;)&lt;/span&gt; /home/user/projetos $ python manage.py migrate  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Com esse comando, criamos um banco SQLite (db.sqlite3) na raiz do&amp;nbsp;projeto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;myproject/
    myproject/
        __init__.py
        settings.py
        urls.py
        wsgi.py
    db.sqlite3
    manage.py
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Testando o&amp;nbsp;projeto&lt;/h2&gt;
&lt;p&gt;Agora podemos ver se a aplicação está funcionando corretamente com o&amp;nbsp;comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;django_project&lt;span class="o"&gt;)&lt;/span&gt; /home/user/projetos $ python manage.py runserver  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Isso fará com que o Django rode a aplicação em um servidor local e sirva nosso projeto em &amp;#8220;http://127.0.0.1:8000&amp;#8221;. Abra seu navegador e digite esse&amp;nbsp;endereço.&lt;/p&gt;
&lt;p&gt;Caso tudo esteja ok a seguinte página aparecerá (clique para&amp;nbsp;ampliar):&lt;/p&gt;
&lt;p&gt;&lt;a href="images/django-1.jpg" data-uk-lightbox title=""&gt;&lt;img src="images/django-1.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Parabéns! Temos nosso primeiro projeto em Django &amp;#8220;up and running&amp;#8221;&amp;nbsp;;)&lt;/p&gt;</summary><category term="django"></category><category term="python"></category><category term="web"></category></entry><entry><title>Django - Aula 01 - Introdução</title><link href="https://rschalch.github.io/django-framework-aula-01-introducao.html" rel="alternate"></link><published>2016-11-11T00:00:00-02:00</published><updated>2016-11-11T00:00:00-02:00</updated><author><name>Ricardo Bürger Schalch</name></author><id>tag:rschalch.github.io,2016-11-11:django-framework-aula-01-introducao.html</id><summary type="html">&lt;h2&gt;Introdução à&amp;nbsp;framework&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Django é a principal e mais conhecida framework Python para web nos dias atuais. Sua filosofia é baseada em &lt;abbr title="Rapid Application Development"&gt;&lt;span class="caps"&gt;RAD&lt;/span&gt;&lt;/abbr&gt;, um conceito muito importante no mundo do desenvolvimento de&amp;nbsp;software.&lt;/p&gt;
&lt;p&gt;Suas características&amp;nbsp;são:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Baixo acoplamento&lt;/strong&gt;: As várias camadas da framework não devem conhecer sobre o funcionamento de outras, a menos que absolutamente necessário. Esse tipo de modelo permite alto grau de modularização e expansão já que cada parte é independente. Assim, futuras mudanças na aplicação serão mais seguras, já que o risco de uma parte interferir com a outra é&amp;nbsp;mínimo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Menos código&lt;/strong&gt;: Django utiliza todo o poder dinâmico da linguagem Python, assim alcançamos grandes resultados escrevendo pouquíssimo&amp;nbsp;código.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Rápido desenvolvimento&lt;/strong&gt;: A framework permite que ultrapassemos muitas tarefas tediosas no ciclo da construção de uma aplicação, um exemplo disso é a geração automática de um sistema de administração baseado nos modelos de dados que criamos. Apenas com essa caractérística podemos construir um sistema &lt;abbr title="Create, Read, Update and Delete"&gt;&lt;span class="caps"&gt;CRUD&lt;/span&gt;&lt;/abbr&gt; em poucos&amp;nbsp;minutos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Não repetição&lt;/strong&gt;: Cada conceito ou parte de código deverá existir em um único lugar apenas, eliminando redundâncias. A idéia é reduzir ao máximo o trabalho de alterações dentro do software e fazê-lo mais conciso e&amp;nbsp;inteligente.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;No decorrer desse curso introdutório vamos desenvolver uma simple aplicação &lt;abbr title="Create, Read, Update and Delete"&gt;&lt;span class="caps"&gt;CRUD&lt;/span&gt;&lt;/abbr&gt; para ajudar quem está começando a se familiarizar com os conceitos fundamentais do&amp;nbsp;Django!&lt;/p&gt;
&lt;p&gt;A versão da framework utilizada nos tutoriais será a&amp;nbsp;1.10.&lt;/p&gt;</summary><category term="django"></category><category term="python"></category><category term="web"></category></entry></feed>